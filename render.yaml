# Render deployment configuration for FarmMate
services:
  # Python AI Server
  - type: web
    name: farmmate-ai-server
    env: python
    plan: starter
    buildCommand: ""
    startCommand: "python src/start_server.py"
    rootDir: agent-python
    healthCheckPath: /health
    envVars:
      - key: PYTHONDONTWRITEBYTECODE
        value: "1"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "8000"
      # Add your API keys in Render dashboard manually for security
      # - key: GEMINI_API_KEY
      #   value: your_gemini_api_key
      # - key: WEATHER_API
      #   value: your_weather_api_key
      # - key: LANGSMITH_API_KEY
      #   value: your_langsmith_api_key
      # - key: AGMARKNET_API_KEY
      #   value: your_agmarknet_api_key

  # Express Backend (optional - deploy separately)
  # - type: web
  #   name: farmmate-backend
  #   env: node
  #   plan: starter
  #   buildCommand: "npm install"
  #   startCommand: "npm start"
  #   rootDir: backend
  #   healthCheckPath: /health
  #   envVars:
  #     - key: NODE_ENV
  #       value: production
  #     - key: PORT
  #       value: "5000"
  #     - key: PYTHON_SERVER_URL
  #       value: "wss://farmmate-ai-server.onrender.com"

  # React Frontend (optional - deploy separately)
  # - type: web
  #   name: farmmate-frontend
  #   env: static
  #   plan: starter
  #   buildCommand: "cd web/agricultural-chat-app && npm install && npm run build"
  #   staticPublishPath: frontend/web/agricultural-chat-app/build
  #   rootDir: frontend
  #   envVars:
  #     - key: REACT_APP_BACKEND_URL
  #       value: "https://farmmate-backend.onrender.com"
  #     - key: REACT_APP_SOCKET_URL
  #       value: "https://farmmate-backend.onrender.com"
